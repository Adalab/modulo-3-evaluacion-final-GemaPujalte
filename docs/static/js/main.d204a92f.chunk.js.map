{"version":3,"sources":["services/api.js","components/CharacterCard.js","components/Filters.js","components/CharacterList.js","components/CharacterDetail.js","images/logo.png","components/Header.js","components/App.js","index.js"],"names":["search","fetch","then","response","json","data","results","CharacterCard","props","className","to","id","src","image","title","name","alt","species","episodes","Filters","handleFilter","ev","target","value","onSubmit","preventDefault","htmlFor","type","placeholder","filterText","onChange","filterEpisodes","CharacterList","characters","length","charactersItems","map","character","index","episode","CharacterDetail","img","status","origin","Header","logo","App","useState","setCharacters","setFilterText","IsLoading","setIsLoading","setFilterEpisodes","useEffect","api","filteredCharacters","filter","toLowerCase","includes","parseInt","console","log","exact","path","component","routeCharacterId","match","params","foundCharacter","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d204a92f.chunk.js","sourcesContent":["const getDataFromApi = (search) => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results;\n    });\n};\n\nexport default {\n  getDataFromApi: getDataFromApi,\n};\n","import React from \"react\";\nimport \"../stylesheets/CharacterCard.scss\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterCard = (props) => {\n  return (\n    <>\n      <article className=\"character-list\">\n        <Link to={`/character-detail/${props.id}`} className=\"link\">\n          <img\n            className=\"card__img\"\n            src={props.image}\n            title={props.name}\n            alt={`This character is : ${props.name} `}\n          />\n        </Link>\n\n        <div className=\"card__info\">\n          <h3>{props.name}</h3>\n          <p>{props.species}</p>\n          <p>{props.episodes}</p>\n        </div>\n      </article>\n    </>\n  );\n};\n\nCharacterCard.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string,\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"../stylesheets/Filters.scss\";\n\nconst Filters = (props) => {\n  const handleFilter = (ev) => {\n    const data = {\n      id: ev.target.id,\n      value: ev.target.value,\n    };\n    props.handleFilter(data);\n  };\n\n  //prevent error when pressing enter\n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  };\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <label htmlFor=\"name\"></label>\n      <input\n        className=\"form__input\"\n        type=\"text\"\n        id=\"name\"\n        placeholder=\"Who are you looking for?\"\n        value={props.filterText} //control filter input\n        onChange={handleFilter}\n      />\n\n      <label htmlFor=\"episodes\"></label>\n\n      <input\n        type=\"number\"\n        id=\"episodes\"\n        value={props.filterEpisodes}\n        onChange={handleFilter}\n      />\n    </form>\n  );\n};\n\nexport default Filters;\n","import React from \"react\";\nimport \"../stylesheets/CharacterList.scss\";\nimport CharacterCard from \"./CharacterCard\";\nimport Filters from \"./Filters\";\nimport ReturnsError from \"./ReturnsError\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterList = (props) => {\n  if (props.characters.length === 0) {\n    return (\n      <>\n        <Link to=\"/\">\n          <button>Intentalo otra vez</button>\n        </Link>\n        <p className=\"searchErrorText\">\n          Oh oh ..... there is no one here with that name ....\n        </p>\n      </>\n    );\n  } else {\n    const charactersItems = props.characters.map((character, index) => {\n      return (\n        <CharacterCard\n          key={index}\n          id={character.id}\n          title={character.name}\n          image={character.image}\n          name={character.name}\n          species={character.species}\n          episodes={character.episode.length}\n        />\n      );\n    });\n    return (\n      <div>\n        <Filters\n          filterEpisodes={props.filterEpisodes}\n          filterText={props.filterText}\n          handleFilter={props.handleFilter}\n        />\n        <section className=\"cardList\">{charactersItems}</section>\n      </div>\n    );\n  }\n};\n\nexport default CharacterList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/CharacterDetail.scss\";\n\nconst CharacterDetail = (props) => {\n  return (\n    <>\n      <Link to=\"/\">\n        <div className=\"return__link\">\n          <span> Back home </span>\n        </div>\n      </Link>\n\n      <article className=\"character__detail\">\n        <img\n          className=\"character__detail--img\"\n          src={props.img}\n          alt={`This character is : ${props.name} `}\n        />\n        <div className=\"character__detail--info\">\n          <h2>{`Name: ${props.name}`}</h2>\n          <p className=\"character__detail--data\">Status: {props.status}</p>\n          <p> Species: {props.species}</p>\n          <p>Origin: {props.origin}</p>\n          <p>Episodes: {props.episode}</p>\n        </div>\n      </article>\n    </>\n  );\n};\n\nexport default CharacterDetail;\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import logo from \"../images/logo.png\";\nimport \"../stylesheets/Header.scss\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <img\n        className=\"header__logo\"\n        src={logo}\n        alt=\"Rick and Morty \"\n        title=\"Rick and Morty \"\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst App = () => {\n  //state\n  const [characters, setCharacters] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  const [IsLoading, setIsLoading] = useState(false);\n  const [filterEpisodes, setFilterEpisodes] = useState(\"\");\n\n  //api\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then((data) => {\n      setCharacters(data); //guardo el array con todos los datos\n      setIsLoading(false);\n    });\n  }, []);\n\n  //events\n  const handleFilter = (data) => {\n    if (data.id === \"name\") {\n      setFilterText(data.value);\n      console.log(\"Nombre\", filterText);\n    } else if (data.id === \"episodes\") {\n      console.log(data.value);\n\n      setFilterEpisodes(data.value);\n      console.log(\"episodes\", filterEpisodes);\n    }\n  };\n\n  //filters;\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterText.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterEpisodes === \"\") {\n        return character;\n      }\n\n      return character.episode.length === parseInt(filterEpisodes);\n    });\n\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find((character) => {\n      return routeCharacterId === parseInt(character.id);\n    });\n\n    if (foundCharacter) {\n      return (\n        <CharacterDetail\n          img={foundCharacter.image}\n          name={foundCharacter.name}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          origin={foundCharacter.origin.name}\n          episode={foundCharacter.episode.length}\n        />\n      );\n    }\n  };\n\n  console.log(IsLoading);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"App__main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <CharacterList\n              filterEpisodes={filterEpisodes}\n              filterText={filterText}\n              characters={filteredCharacters}\n              handleFilter={handleFilter}\n            />\n          </Route>\n          <Route path=\"/character-detail/:id\" component={renderDetail} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}