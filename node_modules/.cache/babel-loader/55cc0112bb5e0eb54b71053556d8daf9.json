{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gema/Desktop/Evaluacion  Final Modulo 3/modulo-3-evaluacion-final-GemaPujalte/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst App = () => {\n  _s();\n\n  //state\n  const [characters, setCharacters] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  const [IsLoading, setIsLoading] = useState(false); //api\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then(data => {\n      setCharacters(data); //guardo el array con todos los datos\n\n      setIsLoading(false);\n    });\n  }, []); //events\n\n  const handleFilter = filterText => {\n    setFilterText(filterText);\n  }; //filters\n\n\n  const filteredCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(filterText.toLowerCase());\n  });\n\n  const renderDetail = props => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find(character => {\n      return routeCharacterId === parseInt(character.id);\n    });\n\n    if (foundCharacter) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        img: foundCharacter.image,\n        name: foundCharacter.name,\n        status: foundCharacter.status,\n        species: foundCharacter.species,\n        origin: foundCharacter.origin.name,\n        episode: foundCharacter.episode.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Personaje no encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  console.log(IsLoading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CharacterList, {\n          filterText: filterText,\n          characters: filteredCharacters,\n          handleFilter: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/character-detail/:id\",\n        component: renderDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"J+1nJH3VciW0B6cbZEJLsF/Im4I=\");\n\n_c = App;\nApp.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gema/Desktop/Evaluacion  Final Modulo 3/modulo-3-evaluacion-final-GemaPujalte/src/components/App.js"],"names":["React","useEffect","useState","api","CharacterList","CharacterDetail","Header","Route","Switch","PropTypes","App","characters","setCharacters","filterText","setFilterText","IsLoading","setIsLoading","getDataFromApi","then","data","handleFilter","filteredCharacters","filter","character","name","toLowerCase","includes","renderDetail","props","routeCharacterId","parseInt","match","params","id","foundCharacter","find","image","status","species","origin","episode","length","console","log","propTypes","number","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst App = () => {\n  //state\n  const [characters, setCharacters] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  const [IsLoading, setIsLoading] = useState(false);\n\n  //api\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then((data) => {\n      setCharacters(data); //guardo el array con todos los datos\n      setIsLoading(false);\n    });\n  }, []);\n\n  //events\n  const handleFilter = (filterText) => {\n    setFilterText(filterText);\n  };\n\n  //filters\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(filterText.toLowerCase());\n  });\n\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find((character) => {\n      return routeCharacterId === parseInt(character.id);\n    });\n\n    if (foundCharacter) {\n      return (\n        <CharacterDetail\n          img={foundCharacter.image}\n          name={foundCharacter.name}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          origin={foundCharacter.origin.name}\n          episode={foundCharacter.episode.length}\n        />\n      );\n    } else {\n      return <p>Personaje no encontrado</p>;\n    }\n  };\n\n  console.log(IsLoading);\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <CharacterList\n            filterText={filterText}\n            characters={filteredCharacters}\n            handleFilter={handleFilter}\n          />\n        </Route>\n        <Route path=\"/character-detail/:id\" component={renderDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}