{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gema/Desktop/Evaluacion  Final Modulo 3/modulo-3-evaluacion-final-GemaPujalte/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst App = () => {\n  _s();\n\n  //state\n  const [characters, setCharacters] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  const [IsLoading, setIsLoading] = useState(false);\n  const [filterEpisodes, setFilterEpisodes] = useState(\"\"); //api\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then(data => {\n      setCharacters(data); //guardo el array con todos los datos\n\n      setIsLoading(false);\n    });\n  }, []); //events\n\n  const handleFilter = data => {\n    if (data.id === \"name\") {\n      setFilterText(data.value);\n      console.log(\"Nombre\", filterText);\n    } else if (data.id === \"episodes\") {\n      console.log(data.value);\n      setFilterEpisodes(parseInt(data.value));\n      console.log(\"episodes\", filterEpisodes);\n    }\n  }; //filters;\n\n\n  const filteredCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(filterText.toLowerCase());\n  }).filter(character => {\n    if (filterEpisodes === \"\") {\n      return character;\n    }\n\n    return character.episode.length === parseInt(filterEpisodes);\n  });\n\n  const renderDetail = props => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find(character => {\n      return routeCharacterId === parseInt(character.id);\n    });\n\n    if (foundCharacter) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        img: foundCharacter.image,\n        name: foundCharacter.name,\n        status: foundCharacter.status,\n        species: foundCharacter.species,\n        origin: foundCharacter.origin.name,\n        episode: foundCharacter.episode.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  console.log(IsLoading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App__main\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(CharacterList, {\n            filterEpisodes: filterEpisodes,\n            filterText: filterText,\n            characters: filteredCharacters,\n            handleFilter: handleFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character-detail/:id\",\n          component: renderDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Kjm4yJ7lXs/OvUEZ+Zwe88r6Bms=\");\n\n_c = App;\nApp.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gema/Desktop/Evaluacion  Final Modulo 3/modulo-3-evaluacion-final-GemaPujalte/src/components/App.js"],"names":["React","useEffect","useState","api","CharacterList","CharacterDetail","Header","Route","Switch","PropTypes","App","characters","setCharacters","filterText","setFilterText","IsLoading","setIsLoading","filterEpisodes","setFilterEpisodes","getDataFromApi","then","data","handleFilter","id","value","console","log","parseInt","filteredCharacters","filter","character","name","toLowerCase","includes","episode","length","renderDetail","props","routeCharacterId","match","params","foundCharacter","find","image","status","species","origin","propTypes","number","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst App = () => {\n  //state\n  const [characters, setCharacters] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  const [IsLoading, setIsLoading] = useState(false);\n  const [filterEpisodes, setFilterEpisodes] = useState(\"\");\n\n  //api\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then((data) => {\n      setCharacters(data); //guardo el array con todos los datos\n      setIsLoading(false);\n    });\n  }, []);\n\n  //events\n  const handleFilter = (data) => {\n    if (data.id === \"name\") {\n      setFilterText(data.value);\n      console.log(\"Nombre\", filterText);\n    } else if (data.id === \"episodes\") {\n      console.log(data.value);\n\n      setFilterEpisodes(parseInt(data.value));\n      console.log(\"episodes\", filterEpisodes);\n    }\n  };\n\n  //filters;\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterText.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterEpisodes === \"\") {\n        return character;\n      }\n\n      return character.episode.length === parseInt(filterEpisodes);\n    });\n\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find((character) => {\n      return routeCharacterId === parseInt(character.id);\n    });\n\n    if (foundCharacter) {\n      return (\n        <CharacterDetail\n          img={foundCharacter.image}\n          name={foundCharacter.name}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          origin={foundCharacter.origin.name}\n          episode={foundCharacter.episode.length}\n        />\n      );\n    }\n  };\n\n  console.log(IsLoading);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"App__main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <CharacterList\n              filterEpisodes={filterEpisodes}\n              filterText={filterText}\n              characters={filteredCharacters}\n              handleFilter={handleFilter}\n            />\n          </Route>\n          <Route path=\"/character-detail/:id\" component={renderDetail} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}